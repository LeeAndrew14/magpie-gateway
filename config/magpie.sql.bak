-- Not final schema!

drop table if exists user_data;

create table user_data(
    id int(6) not null auto_increment,
    wc_id int(6),
    email text, 
    first_name text, 
    last_name text,
    role text,
    billing_first_name text,
    billing_last_name text,
    billing_company text,
    billing_address_1 text,
    billing_city text,
    billing_state text,
    billing_postcode text,
    billing_country text,
    billing_email text,
    billing_phone text,
    shipping_first_name text,
    shipping_last_name text,
    shipping_company text,
    shipping_address_1 text,
    shipping_city text,
    shipping_state text,
    shipping_postcode text,
    shipping_country text,
    created_at datetime default current_timestamp,
    updated_at datetime on update current_timestamp,
    primary key (id)
);

drop table if exists order_data;

create table order_data(
    id int(6) not null auto_increment,
    order_id int(6),
    user_id int(6), 
    email text,
    items text,
    amount double,
    phone text,
    country text,
    street text,
    city text,
    zip text,
    order_notes text,
    created_at datetime default current_timestamp,
    updated_at datetime on update current_timestamp,
    primary key (id)
);

drop table if exists order_status;

create table order_status(
    id int(6) not null auto_increment,
    order_id int(6), 
    order_status text,
    message text,
    primary key (id)
);

drop table if exists magpie_customer;

create table magpie_customer(
    id int(6) not null auto_increment,
    customer_id text,
    account_balance double,
    object text,
    created datetime,
    currency text,
    default_source text,
    delinquent text,
    description text,
    email text,
    sources longtext,
    updated_at datetime on update current_timestamp,
    primary key (id)
);

drop table if exists magpie_charge;

create table magpie_charge(
    id int(6) not null auto_increment,
    order_id int(6),
    charge_id text,
    charge_details longtext,
    created_at datetime default current_timestamp,
    updated_at datetime on update current_timestamp,
    primary key (id)
);

drop table if exists magpie_token;

create table magpie_token(
    id int(6) not null auto_increment,
    order_id int(6),
    token_id text,
    object text,
    created_at datetime default current_timestamp,
    updated_at datetime on update current_timestamp,
    primary key (id)
);

drop table if exists barapido_requests;

create table barapido_requests(
    id int(6) not null auto_increment,
    request text,
    created_at datetime default current_timestamp,
    updated_at datetime on update current_timestamp,
    primary key (id)
);

drop table if exists api_response;

create table api_response(
    id int(6) not null auto_increment,
    response text,
    created_at datetime default current_timestamp,
    updated_at datetime on update current_timestamp,
    primary key (id)
);

drop table if exists card_transaction_records;

create table card_transaction_records(
    id int(6) not null auto_increment,
    order_id int(6),
    id_type text,
    json_type text,
    amount double,
    created_at datetime default current_timestamp,
    updated_at datetime on update current_timestamp,
    primary key (id)
);

drop table if exists customer_data;

create table customer_data(
    id int(6) not null auto_increment,
    email text,
    first_name text,
    last_name text,
    phone text,
    user_role text,
    user_level text,
    product_vendor_owner text,
    product_vendor text,
    billing_first_name text,
    billing_last_name text,
    billing_company text,
    billing_address_1 text,
    billing_address_2 text,
    billing_city text,
    billing_postcode text,
    billing_country text,
    billing_state text,
    billing_phone text,
    billing_email text,
    shipping_first_name text,
    shipping_last_name text,
    shipping_company text,
    shipping_address_1 text,
    shipping_address_2 text,
    shipping_city text,
    shipping_postcode text,
    shipping_country text,
    shipping_state text,
    created_at datetime default current_timestamp,
    updated_at datetime on update current_timestamp,
    primary key (id)
);